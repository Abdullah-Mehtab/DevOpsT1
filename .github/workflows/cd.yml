name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    name: CD on self-hosted
    runs-on: [self-hosted, linux, x64]

    env:
      DEPLOY_DIR: /var/www/devopst1

    steps:
    - name: Check workflow context
      run: |
        echo "Workflow Run ID: ${{ github.event.workflow_run.id }}"
        echo "Head Branch: ${{ github.event.workflow_run.head_branch }}"

    - name: Download artifact from CI
      uses: actions/download-artifact@v4
      with:
        name: deploy-artifact
        path: ./artifact
        github-token: ${{ secrets.PAT }}
        run-id: ${{ github.event.workflow_run.id }}

    - name: Verify artifact
      run: |
        if [ ! -f "./artifact/deploy.zip" ]; then
          echo "Error: Artifact not found!"
          ls -la ./artifact/
          exit 1
        fi
        echo "Artifact found and verified."

    - name: Prepare extraction directory
      run: |
        mkdir -p ./deploy_extract
        chmod 755 ./deploy_extract

    - name: Extract artifact
      run: |
        unzip -o "./artifact/deploy.zip" -d "./deploy_extract"
        
        if [ ! -d "./deploy_extract/public" ]; then
          echo "Error: Extraction failed or wrong structure!"
          ls -la "./deploy_extract/"
          exit 1
        fi
        echo "Artifact extracted successfully."

    - name: Prepare deployment directory
      run: |
        sudo mkdir -p "$DEPLOY_DIR"
        sudo chown -R $USER:$USER "$DEPLOY_DIR"
        sudo chmod -R 755 "$DEPLOY_DIR"

    - name: Copy files to deployment directory
      run: |
        cp -r "./deploy_extract/public/"* "$DEPLOY_DIR/"
        
        # Change ownership to www-data
        sudo chown -R www-data:www-data "$DEPLOY_DIR"

    - name: Test nginx configuration
      run: |
        sudo nginx -t

    - name: Restart nginx
      run: |
        sudo systemctl restart nginx

    - name: Verify deployment
      run: |
        sleep 5
        if curl -f http://localhost/; then
          echo "Deployment successful!"
          curl -s http://localhost/ | tail -3
        else
          echo "Deployment failed!"
          sudo systemctl status nginx --no-pager
          curl -v http://localhost/ || exit 1
        fi

    - name: Cleanup
      run: |
        rm -rf ./deploy_extract
        rm -rf ./artifact