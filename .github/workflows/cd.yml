name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    name: CD on self-hosted
    runs-on: [self-hosted, linux, x64]

    env:
      DEPLOY_DIR: /var/www/devopst1

    steps:
    - name: Checkout current repository
      uses: actions/checkout@v4

    - name: Wait for previous workflow success
      if: ${{ github.event.workflow_run.conclusion != 'success' }}
      run: |
        echo "Upstream workflow did not succeed. Exiting."
        exit 1

    - name: Download artifact from CI workflow
      uses: actions/github-script@v6
      with:
        script: |
          // Get artifacts from the triggering workflow run
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.payload.workflow_run.id,
          });
          
          // Find the deploy-artifact
          const artifact = artifacts.data.artifacts.find(a => a.name === 'deploy-artifact');
          if (!artifact) {
            throw new Error('Artifact not found');
          }
          
          // Download the artifact
          const download = await github.rest.actions.downloadArtifact({
            owner: context.repo.owner,
            repo: context.repo.repo,
            artifact_id: artifact.id,
            archive_format: 'zip',
          });
          
          // Write the artifact to disk
          const fs = require('fs').promises;
          await fs.writeFile('deploy.zip', Buffer.from(download.data));
          
          return 'Artifact downloaded successfully';

    - name: Extract artifact
      run: |
        unzip -o deploy.zip -d /tmp/deploy_temp

    - name: Deploy to nginx
      run: |
        sudo mkdir -p $DEPLOY_DIR
        sudo cp -r /tmp/deploy_temp/* $DEPLOY_DIR/
        sudo chown -R www-data:www-data $DEPLOY_DIR
        sudo nginx -t
        sudo systemctl restart nginx

    - name: Verify deployment
      run: |
        sleep 2
        curl -f http://localhost/ || (curl -v http://localhost/ && exit 1)