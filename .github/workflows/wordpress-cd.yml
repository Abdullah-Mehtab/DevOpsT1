name: WordPress App CD

on:
  workflow_run:
    workflows: [WordPress App CI]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: self-hosted

    steps:
      - name: Check workflow context
        run: |
          echo "Workflow Run ID: ${{ github.event.workflow_run.id }}"
          echo "Head Branch: ${{ github.event.workflow_run.head_branch }}"

      - name: Download artifact from CI
        uses: actions/download-artifact@v4
        with:
          name: wordpress-artifact
          path: ./artifact
          github-token: ${{ secrets.PAT }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Verify artifact
        run: |
          if [ ! -f "./artifact/wordpress-config.zip" ]; then
            echo "Error: Artifact not found!"
            ls -la ./artifact/
            exit 1
          fi
          echo "Artifact found and verified."

      - name: Extract artifact
        run: |
          unzip -o "./artifact/wordpress-config.zip" -d "./deploy_extract"
          if [ ! -f "./deploy_extract/wp-config.php.template" ]; then
            echo "Error: Extraction failed or wp-config.php.template not found!"
            ls -la "./deploy_extract/"
            exit 1
          fi
          echo "Artifact extracted successfully."

      - name: Generate wp-config.php from template
        run: |
          cd ./deploy_extract
          # Replace placeholders with environment variables from GitHub Secrets
          sed -e "s/%%DB_NAME%%/${{ secrets.DB_NAME }}/g" \
              -e "s/%%DB_USER%%/${{ secrets.DB_USER }}/g" \
              -e "s/%%DB_PASSWORD%%/${{ secrets.DB_PASSWORD }}/g" \
              -e "s/%%DB_HOST%%/${{ secrets.DB_HOST }}/g" \
              wp-config.php.template > wp-config.php
          
          # Verify the generated file
          if [ ! -f "wp-config.php" ]; then
            echo "Error: Failed to generate wp-config.php!"
            exit 1
          fi
          
          echo "wp-config.php generated successfully"

      - name: Deploy WordPress config
        run: |
          sudo -n cp ./deploy_extract/wp-config.php /var/www/wordpress/
          sudo -n chown www-data:www-data /var/www/wordpress/wp-config.php
          sudo -n chmod 640 /var/www/wordpress/wp-config.php

      - name: Deploy Nginx config
        run: |
          if [ -f "./deploy_extract/configs/nginx/wordpress-react" ]; then
            sudo -n cp ./deploy_extract/configs/nginx/wordpress-react /etc/nginx/sites-available/wordpress-react
            sudo -n ln -sf /etc/nginx/sites-available/wordpress-react /etc/nginx/sites-enabled/
            sudo -n nginx -t
            sudo -n systemctl reload nginx
          fi

      - name: Reload PHP-FPM
        run: |
          sudo -n systemctl reload php8.1-fpm

      - name: Verify deployment
        run: |
          # Wait a moment for services to reload
          sleep 3
          # Check if WordPress is accessible (basic check)
          if curl -f http://localhost/ >/dev/null 2>&1; then
            echo "Deployment successful! WordPress is responding."
          else
            echo "Deployment may have failed - checking service status:"
            sudo -n systemctl status nginx --no-pager
            sudo -n systemctl status php8.1-fpm --no-pager
            exit 1
          fi

      - name: Cleanup
        run: |
          rm -rf ./deploy_extract
          rm -rf ./artifact
          echo "Cleanup completed."